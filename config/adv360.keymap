#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT_LAYER 0
#define FN_LAYER 1
#define DVORAK_LAYER 2
#define DVORAK_FN 3
#define KEYPAD 4
#define MOD_LAYER 5

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

gpipe: grave_pipe {
    compatible = "zmk,behavior-mod-morph";
    label = "grave_pipe";
    #binding-cells = <0>;
    bindings = <&kp GRAVE>, <&kp PIPE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};

ppipe: pipe_pipe {
    compatible = "zmk,behavior-mod-morph";
    label = "pipe_pipe";
    #binding-cells = <0>;
    bindings = <&kp PIPE>, <&kp PIPE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};

pkp_n1: plus_kp_n1 {
    compatible = "zmk,behavior-mod-morph";
    label = "plus_kp_n1";
    #binding-cells = <0>;
    bindings = <&kp PLUS>, <&kp N1>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_LSFT)>;
};

lkp_n2: left_bracket_kp_n2 {
    compatible = "zmk,behavior-mod-morph";
    label = "left_bracket_kp_n2";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACKET>, <&kp N2>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_LSFT)>;
};

lkp_n3: left_brace_kp_n3 {
    compatible = "zmk,behavior-mod-morph";
    label = "left_brace_kp_n3";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACE>, <&kp N3>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_LSFT)>;
};

lkp_n4: left_parenthesis_kp_n4 {
    compatible = "zmk,behavior-mod-morph";
    label = "left_parenthesis_kp_n4";
    #binding-cells = <0>;
    bindings = <&kp LEFT_PARENTHESIS>, <&kp N4>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_LSFT)>;
};

akp_n5: amps_kp_n5 {
    compatible = "zmk,behavior-mod-morph";
    label = "amps_kp_n5";
    #binding-cells = <0>;
    bindings = <&kp AMPS>, <&kp N5>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_LSFT)>;
};

ekp_n6: equal_kp_n6 {
    compatible = "zmk,behavior-mod-morph";
    label = "equal_kp_n6";
    #binding-cells = <0>;
    bindings = <&kp EQUAL>, <&kp N6>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_LSFT)>;
};

rkp_n7: right_parenthesis_kp_n7 {
    compatible = "zmk,behavior-mod-morph";
    label = "right_parenthesis_kp_n7";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_PARENTHESIS>, <&kp N7>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
};

rkp_n8: right_brace_kp_n8 {
    compatible = "zmk,behavior-mod-morph";
    label = "right_brace_kp_n8";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_BRACE>, <&kp N8>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
};

rkp_n9: right_bracket_kp_n9 {
    compatible = "zmk,behavior-mod-morph";
    label = "right_bracket_kp_n9";
    #binding-cells = <0>;
    bindings = <&kp RIGHT_BRACKET>, <&kp N9>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
};

skp_n0: star_kp_n0 {
    compatible = "zmk,behavior-mod-morph";
    label = "star_kp_n0";
    #binding-cells = <0>;
    bindings = <&kp STAR>, <&kp N0>;
    mods = <(MOD_LSFT|MOD_RSFT|MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL)>;
    keep-mods = <(MOD_LGUI|MOD_RGUI|MOD_LALT|MOD_RALT|MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
};

eprcnt: excl_prcnt {
    compatible = "zmk,behavior-mod-morph";
    label = "excl_prcnt";
    #binding-cells = <0>;
    bindings = <&kp EXCL>, <&kp PRCNT>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};

dgrave: dllr_grave {
    compatible = "zmk,behavior-mod-morph";
    label = "dllr_grave";
    #binding-cells = <0>;
    bindings = <&kp DLLR>, <&kp GRAVE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
ggrave: grave_grave {
    compatible = "zmk,behavior-mod-morph";
    label = "grave_grave";
    #binding-cells = <0>;
    bindings = <&kp GRAVE>, <&kp GRAVE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
bhash: bslh_hash {
    compatible = "zmk,behavior-mod-morph";
    label = "bslh_hash";
    #binding-cells = <0>;
    bindings = <&kp BSLH>, <&kp HASH>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};
acaret: at_caret {
    compatible = "zmk,behavior-mod-morph";
    label = "at_caret";
    #binding-cells = <0>;
    bindings = <&kp AT>, <&kp CARET>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
};

lsftcaps: lsft_caps {
    compatible = "zmk,behavior-mod-morph";
    label = "lsft_caps";
    #binding-cells = <0>;
    bindings = <&kp LSFT>, <&kp CAPS>;
    mods = <(MOD_RSFT)>;
};

rsftcaps: rsft_caps {
    compatible = "zmk,behavior-mod-morph";
    label = "rsft_caps";
    #binding-cells = <0>;
    bindings = <&kp RSFT>, <&kp CAPS>;
    mods = <(MOD_LSFT)>;
};

    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        // 0

        default_layer {
            bindings = <
&kp EQUAL    &kp N1    &kp N2   &kp N3   &kp N4    &kp N5 &tog KEYPAD                                                                            &mo MOD_LAYER     &kp N6 &kp N7   &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB      &kp Q     &kp W    &kp E    &kp R     &kp T  &kp LG(LC(LEFT))                                                                       &kp LG(LC(RIGHT)) &kp Y  &kp U    &kp I     &kp O    &kp P    &kp BSLH
&kp ESC      &kp A     &kp S    &kp D    &kp F     &kp G  &kp LG(LS(LEFT))          &kp LCTRL &kp LALT          &kp LGUI     &kp RCTRL           &kp LG(LS(RIGHT)) &kp H  &kp J    &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT    &kp Z     &kp X    &kp C    &kp V     &kp B                                      &kp LA(LCTRL)     &kp LA(LSFT)                                       &kp N  &kp M    &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
&to FN_LAYER &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                         &kp BSPC &kp DEL   &kp LA(LC(LSFT))  &kp LC(LSFT) &kp ENTER &kp SPACE                          &kp DOWN &kp UP    &kp LBKT &kp RBKT &to FN_LAYER
            >;
        };

        // 1

        fn {
            bindings = <
&kp F1            &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog KEYPAD                                              &mo MOD_LAYER &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
&trans            &trans &trans &trans &trans &trans &trans                                                   &trans        &trans &trans &trans &trans  &trans  &trans
&trans            &trans &trans &trans &trans &trans &trans             &trans &trans  &trans &kp LALT        &trans        &trans &trans &trans &trans  &trans  &trans
&trans            &trans &trans &trans &trans &trans                           &trans  &trans                               &trans &trans &trans &trans  &trans  &trans
&to DEFAULT_LAYER &trans &trans &trans &trans                    &trans &trans &trans  &trans &trans   &trans                      &trans &trans &trans  &trans  &to DEFAULT_LAYER
            >;
        };

        // 2

        dvorak_layer {
          bindings = <
&ppipe        &pkp_n1  &lkp_n2   &lkp_n3  &lkp_n4   &akp_n5 &tog KEYPAD                                                                            &mo MOD_LAYER     &ekp_n6 &rkp_n7  &rkp_n8 &rkp_n9  &skp_n0 &eprcnt
&kp TAB       &kp SEMI &kp COMMA &kp DOT  &kp P     &kp Y   &kp LG(LC(LEFT))                                                                       &kp LG(LC(RIGHT)) &kp F   &kp G    &kp C   &kp R    &kp L   &bhash
&kp ESC       &kp A    &kp O     &kp E    &kp U     &kp I   &kp LG(LS(LEFT))          &kp LCTRL &kp LALT          &kp LGUI     &kp RCTRL           &kp LG(LS(RIGHT)) &kp D   &kp H    &kp T   &kp N    &kp S   &kp MINUS
&lsftcaps     &kp APOS &kp Q     &kp J    &kp K     &kp X                                       &kp LA(LCTRL)     &kp LA(LSFT)                                       &kp B   &kp M    &kp W   &kp V    &kp Z   &rsftcaps
&to DVORAK_FN &dgrave  &kp GRAVE &kp LEFT &kp RIGHT                          &kp BSPC &kp DEL   &kp LA(LC(LSFT))  &kp LC(LSFT) &kp ENTER &kp SPACE                           &kp DOWN &kp UP  &kp FSLH &acaret &to DVORAK_FN
            >;
        };

            // 3

        dvorak_fn {
            bindings = <
&kp F1           &kp F2   &kp F3    &kp F4   &kp F5    &kp F6  &tog KEYPAD                                                                            &mo MOD_LAYER     &kp F7  &kp F8   &kp F9  &kp F10  &kp F11 &kp F12
&kp TAB          &kp SEMI &kp COMMA &kp DOT  &kp P     &kp Y   &kp LG(LC(LEFT))                                                                       &kp LG(LC(RIGHT)) &kp F   &kp G    &kp C   &kp R    &kp L   &bhash
&kp ESC          &kp A    &kp O     &kp E    &kp U     &kp I   &kp LG(LS(LEFT))          &kp LCTRL &kp LALT          &kp LGUI     &kp RCTRL           &kp LG(LS(RIGHT)) &kp D   &kp H    &kp T   &kp N    &kp S   &kp MINUS
&lsftcaps        &kp APOS &kp Q     &kp J    &kp K     &kp X                                       &kp LA(LCTRL)     &kp LA(LSFT)                                       &kp B   &kp M    &kp W   &kp V    &kp Z   &rsftcaps
&to DVORAK_LAYER &dgrave  &kp GRAVE &kp LEFT &kp RIGHT                          &kp BSPC &kp DEL   &kp LA(LC(LSFT))  &kp LC(LSFT) &kp ENTER &kp SPACE                           &kp DOWN &kp UP  &kp FSLH &acaret &to DVORAK_LAYER
            >;
        };

        // 4

        keypad-game {
            bindings = <
&kp F1 &kp N5    &kp N1   &kp N2   &kp N3   &kp N4 &kp N5                                                    &mo MOD_LAYER &kp SLCK &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
&kp F2 &kp TAB   &kp Q    &kp W    &kp E    &kp R  &kp T                                                     &none         &kp Y    &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
&kp F3 &kp LSHFT &kp A    &kp S    &kp D    &kp F  &kp G            &trans   &trans  &trans &trans           &none         &kp H    &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
&kp F4 &kp LCTRL &kp Z    &kp X    &kp C    &kp B                            &trans  &trans                                &kp N    &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
&kp F5 &kp GRAVE &kp CAPS &kp LEFT &kp LALT               &kp SPACE &kp BSPC &trans  &trans &trans &kp KP_N0                        &kp DOWN   &kp UP       &kp KP_DOT    &kp RBKT        &tog KEYPAD
            >;
        };

        // 5

        mod {
            bindings = <
&kp LA(F16)  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4 &none                                                                &trans                 &none &none      &none      &none &none &none
&kp C_VOL_UP &none        &none        &none             &none            &none        &bootloader                                                          &bootloader            &none &none      &none      &none &none &none
&kp C_VOL_DN &none        &none        &none             &none            &none        &none             &none &none  &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none &none      &none      &none &none &none
&kp C_MUTE   &none        &none        &none             &macro_ver       &none                                &none  &none                                                        &none &none      &none      &none &none &none
&none        &none        &none        &to DEFAULT_LAYER &to DVORAK_LAYER                          &none &none &none  &none      &bl BL_TOG &rgb_ug RGB_TOG                              &bl BL_DEC &bl BL_INC &none &none &none
            >;
        };

            // 6

    };
};
